name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST: localhost
      MARKET: ES
      FRONTEND_URL: http://localhost
      SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_TEST_CLIENT_ID }}
      SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_TEST_CLIENT_SECRET }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install uv
        cd backend
        uv export --format requirements.txt --no-hashes | pip install --no-cache-dir -r /dev/stdin

    - name: Run migrations
      run: |
        python backend/manage.py migrate

    - name: Run tests
      run: |
        cd backend
        pytest -v

  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install uv
        cd backend
        uv export --format requirements.txt --no-hashes | pip install --no-cache-dir -r /dev/stdin

    - name: Check Black
      run: |
        black --check backend

    - name: Check isort
      run: |
        isort --check-only backend

    - name: Check flake8
      run: |
        flake8 backend